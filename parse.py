import os
import json
from datetime import datetime


def parse_file(file: str) -> str:
    """–ü–∞—Ä—Å–∏–Ω–≥ JSON —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–ø–∏—Å–∫–æ–π –æ—Ç ppldump_bot

    Args:
        file (str): –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Ç telebot.get_file

    Returns:
        str: JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    """

    result = {
        "error": None,
        "result": None
    }

    statistics = {
        'total_count': 0,
        'hearts': 0,
        'skulls': 0,
        'your_messages': 0,
        'first_start': '',
        'first_message': '',
        'first_message_date': '',
        'first_heart': '',
        'first_heart_date': '',
        'first_skull': '',
        'first_skull_date': '',
        'last_message_date': '',
        'content_types': {
            'photo': 0,
            'video': 0,
            'audio': 0,
            'animation': 0,
            'text': 0
        }
    }

    past_message = {}

    with open(file, 'r', encoding='utf-8') as json_file:
        data = json.load(json_file)


    try:
        if data['name'] != 'dump' and data['type'] != 'bot_chat':
            result['error'] = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞: —ç—Ç–æ –Ω–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å –±–æ—Ç–æ–º @ppldump_bot'
            return result
        
        for i in data['messages']:
            buttons = i.get('inline_bot_buttons')
            statistics['last_message_date'] = datetime.fromisoformat(i['date']).strftime("%d.%m.%Y %H:%M:%S")

            # –ü–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç
            if statistics['first_start'] == '':
                statistics['first_start'] = datetime.fromisoformat(i['date']).strftime("%d.%m.%Y %H:%M:%S")

            if i['from'] == 'dump' and buttons is not None:

                # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–æ–º–æ–µ–≤ (–ø–æ –∫–Ω–æ–ø–∫–∞–º –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
                if len(buttons[0]) == 3 and len(buttons[1]) >= 1:
                    statistics['total_count'] += 1
                    

                    ## –ö–æ–ª-–≤–æ –ª–∞–π–∫–æ–≤ –∏ –¥–∏–∑–æ–≤
                    if 'üíö' in buttons[0][0]['text']:
                        statistics['hearts'] += 1

                        # –ü–µ—Ä–≤–æ–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
                        if statistics['first_heart'] == '':
                            statistics['first_heart'] = i['text']
                            statistics['first_heart_date'] = datetime.fromisoformat(i['date']).strftime("%d.%m.%Y %H:%M:%S")

                    elif '‚ò†' in buttons[0][1]['text']:
                        statistics['skulls'] += 1

                        # –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —á–µ—Ä–µ–ø–æ–∫
                        if statistics['first_skull'] == '':
                            statistics['first_skull'] = i['text']
                            statistics['first_skull_date'] = datetime.fromisoformat(i['date']).strftime("%d.%m.%Y %H:%M:%S")

                    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    if 'photo' in i:
                        statistics['content_types']['photo'] += 1
                    elif i.get('media_type') == 'video_file':
                        statistics['content_types']['video'] += 1
                    elif i.get('media_type') == 'audio_file':
                        statistics['content_types']['audio'] += 1
                    elif i.get('media_type') == 'animation':
                        statistics['content_types']['animation'] += 1
                    else:
                        statistics['content_types']['text'] += 1

            ## –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ
            elif i['from'] == 'dump' and i['text'] == '–∫–∏–Ω—É–ª –≤ —Å–≤–∞–ª–∫—É üõ¢Ô∏è':
                statistics['your_messages'] += 1

                # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if statistics['first_message'] == '':
                    statistics['first_message'] = past_message['text']
                    statistics['first_message_date'] = datetime.fromisoformat(past_message['date']).strftime("%d.%m.%Y %H:%M:%S")


            past_message = { 'text': i['text'], 'date': i['date']}

    
    except KeyError:
        pass
    except:
        result['error'] = '—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è'
        return result
    
    result['result'] = statistics
    return result